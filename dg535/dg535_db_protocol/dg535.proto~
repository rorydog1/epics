## Stream Device Protocol for the dg535 Stanford Research Systems delay and pulse generator
## Rory Clarke 18/12/2015

# The DG535 takes a float that is 15 digits wide with 12 precision:
# 123.123456789012
# Unless you are working at 64 bits your precision may not be wide enough


##############################################
#Char input
#

OutTerminator   = CR LF;
InTerminator   = CR;
MaxInput = 0;
ReplyTimeout = 5000;
LockTimeout = 8000;

#Generate an error for testing
get_test{out "BAD"} 

##############################################
#Commands
#

#Clear
get_CL {out "CL"}

#Get errors and machine state
get_ES {out "ES"; in "%8b"}
get_IS {out "IS"; in "%8b"}

#Set delay
set_TD {out"DT%(\$1).1u,%(\$2).1u,%s"}
get_TD {out"DT%(\$1).1u"; in "%(\$2)u,%(\$3)f"}

#Set terminaion resistance
set_TD {out"TZ%(\$1).1u,%1u"}
get_TD {out"TZ%(\$1).1u"; in "%(\%2)u"}

#Set output mode
#Note, VAR has OO OA (offset and amp) These only have an effect for the VAR mode
set_TD {out"OM%(\$1).1u,%1u"}

#Get params
get_PARM {out"OM%(\$1).1u; OA%(\$1).1u; OO%(\$1).1u ; OP%(\$1).1u"; in "%(\$2)u"; in "%(\$3)u"; in "%(\$4)u";in "%(\$5)u" }


