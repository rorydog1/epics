menu(stringoutPOST) {
	choice(stringoutPOST_OnChange,"On Change")
	choice(stringoutPOST_Always,"Always")
}
menu(menuYesNo) {
	choice(menuYesNoNO,"NO")
	choice(menuYesNoYES,"YES")
}
menu(menuSimm) {
	choice(menuSimmNO,"NO")
	choice(menuSimmYES,"YES")
	choice(menuSimmRAW,"RAW")
}
menu(menuScan) {
	choice(menuScanPassive,"Passive")
	choice(menuScanEvent,"Event")
	choice(menuScanI_O_Intr,"I/O Intr")
	choice(menuScan10_second,"10 second")
	choice(menuScan5_second,"5 second")
	choice(menuScan2_second,"2 second")
	choice(menuScan1_second,"1 second")
	choice(menuScan_5_second,".5 second")
	choice(menuScan_2_second,".2 second")
	choice(menuScan_1_second,".1 second")
}
menu(menuPriority) {
	choice(menuPriorityLOW,"LOW")
	choice(menuPriorityMEDIUM,"MEDIUM")
	choice(menuPriorityHIGH,"HIGH")
}
menu(menuPini) {
	choice(menuPiniNO,"NO")
	choice(menuPiniYES,"YES")
	choice(menuPiniRUN,"RUN")
	choice(menuPiniRUNNING,"RUNNING")
	choice(menuPiniPAUSE,"PAUSE")
	choice(menuPiniPAUSED,"PAUSED")
}
menu(menuOmsl) {
	choice(menuOmslsupervisory,"supervisory")
	choice(menuOmslclosed_loop,"closed_loop")
}
menu(menuIvoa) {
	choice(menuIvoaContinue_normally,"Continue normally")
	choice(menuIvoaDon_t_drive_outputs,"Don't drive outputs")
	choice(menuIvoaSet_output_to_IVOV,"Set output to IVOV")
}
menu(menuFtype) {
	choice(menuFtypeSTRING,"STRING")
	choice(menuFtypeCHAR,"CHAR")
	choice(menuFtypeUCHAR,"UCHAR")
	choice(menuFtypeSHORT,"SHORT")
	choice(menuFtypeUSHORT,"USHORT")
	choice(menuFtypeLONG,"LONG")
	choice(menuFtypeULONG,"ULONG")
	choice(menuFtypeFLOAT,"FLOAT")
	choice(menuFtypeDOUBLE,"DOUBLE")
	choice(menuFtypeENUM,"ENUM")
}
menu(menuConvert) {
	choice(menuConvertNO_CONVERSION,"NO CONVERSION")
	choice(menuConvertSLOPE,"SLOPE")
	choice(menuConvertLINEAR,"LINEAR")
	choice(menuConverttypeKdegF,"typeKdegF")
	choice(menuConverttypeKdegC,"typeKdegC")
	choice(menuConverttypeJdegF,"typeJdegF")
	choice(menuConverttypeJdegC,"typeJdegC")
	choice(menuConverttypeEdegF,"typeEdegF(ixe only)")
	choice(menuConverttypeEdegC,"typeEdegC(ixe only)")
	choice(menuConverttypeTdegF,"typeTdegF")
	choice(menuConverttypeTdegC,"typeTdegC")
	choice(menuConverttypeRdegF,"typeRdegF")
	choice(menuConverttypeRdegC,"typeRdegC")
	choice(menuConverttypeSdegF,"typeSdegF")
	choice(menuConverttypeSdegC,"typeSdegC")
}
menu(menuCompress) {
	choice(menuCompressN_to_1_First_Value,"N to 1 First Value")
	choice(menuCompressN_to_1_Low_Value,"N to 1 Low Value")
	choice(menuCompressN_to_1_High_Value,"N to 1 High Value")
	choice(menuCompressN_to_1_Average,"N to 1 Average")
}
menu(menuAlarmStat) {
	choice(menuAlarmStatNO_ALARM,"NO_ALARM")
	choice(menuAlarmStatREAD,"READ")
	choice(menuAlarmStatWRITE,"WRITE")
	choice(menuAlarmStatHIHI,"HIHI")
	choice(menuAlarmStatHIGH,"HIGH")
	choice(menuAlarmStatLOLO,"LOLO")
	choice(menuAlarmStatLOW,"LOW")
	choice(menuAlarmStatSTATE,"STATE")
	choice(menuAlarmStatCOS,"COS")
	choice(menuAlarmStatCOMM,"COMM")
	choice(menuAlarmStatTIMEOUT,"TIMEOUT")
	choice(menuAlarmStatHWLIMIT,"HWLIMIT")
	choice(menuAlarmStatCALC,"CALC")
	choice(menuAlarmStatSCAN,"SCAN")
	choice(menuAlarmStatLINK,"LINK")
	choice(menuAlarmStatSOFT,"SOFT")
	choice(menuAlarmStatBAD_SUB,"BAD_SUB")
	choice(menuAlarmStatUDF,"UDF")
	choice(menuAlarmStatDISABLE,"DISABLE")
	choice(menuAlarmStatSIMM,"SIMM")
	choice(menuAlarmStatREAD_ACCESS,"READ_ACCESS")
	choice(menuAlarmStatWRITE_ACCESS,"WRITE_ACCESS")
}
menu(menuAlarmSevr) {
	choice(menuAlarmSevrNO_ALARM,"NO_ALARM")
	choice(menuAlarmSevrMINOR,"MINOR")
	choice(menuAlarmSevrMAJOR,"MAJOR")
	choice(menuAlarmSevrINVALID,"INVALID")
}
recordtype(bo) {
	field(NAME,DBF_STRING) {
		prompt("Record Name")
		special(SPC_NOMOD)
		size(61)
	}
	field(DESC,DBF_STRING) {
		prompt("Descriptor")
		promptgroup(GUI_COMMON)
		size(41)
	}
	field(ASG,DBF_STRING) {
		prompt("Access Security Group")
		promptgroup(GUI_COMMON)
		special(SPC_AS)
		size(29)
	}
	field(SCAN,DBF_MENU) {
		prompt("Scan Mechanism")
		promptgroup(GUI_SCAN)
		special(SPC_SCAN)
		menu(menuScan)
		interest(1)
	}
	field(PINI,DBF_MENU) {
		prompt("Process at iocInit")
		promptgroup(GUI_SCAN)
		menu(menuPini)
		interest(1)
	}
	field(PHAS,DBF_SHORT) {
		prompt("Scan Phase")
		promptgroup(GUI_SCAN)
		special(SPC_SCAN)
		interest(1)
	}
	field(EVNT,DBF_SHORT) {
		prompt("Event Number")
		promptgroup(GUI_SCAN)
		special(SPC_SCAN)
		interest(1)
	}
	field(TSE,DBF_SHORT) {
		prompt("Time Stamp Event")
		promptgroup(GUI_SCAN)
		interest(1)
	}
	field(TSEL,DBF_INLINK) {
		prompt("Time Stamp Link")
		promptgroup(GUI_SCAN)
		interest(1)
	}
	field(DTYP,DBF_DEVICE) {
		prompt("Device Type")
		promptgroup(GUI_LINKS)
		interest(1)
	}
	field(DISV,DBF_SHORT) {
		prompt("Disable Value")
		initial("1")
		promptgroup(GUI_SCAN)
	}
	field(DISA,DBF_SHORT) {
		prompt("Disable")
	}
	field(SDIS,DBF_INLINK) {
		prompt("Scanning Disable")
		promptgroup(GUI_SCAN)
		interest(1)
	}
	field(MLOK,DBF_NOACCESS) {
		prompt("Monitor lock")
		special(SPC_NOMOD)
		extra("epicsMutexId	mlok")
		interest(4)
	}
	field(MLIS,DBF_NOACCESS) {
		prompt("Monitor List")
		special(SPC_NOMOD)
		extra("ELLLIST		mlis")
		interest(4)
	}
	field(DISP,DBF_UCHAR) {
		prompt("Disable putField")
	}
	field(PROC,DBF_UCHAR) {
		prompt("Force Processing")
		pp(TRUE)
		interest(3)
	}
	field(STAT,DBF_MENU) {
		prompt("Alarm Status")
		initial("UDF")
		special(SPC_NOMOD)
		menu(menuAlarmStat)
	}
	field(SEVR,DBF_MENU) {
		prompt("Alarm Severity")
		initial("INVALID")
		special(SPC_NOMOD)
		menu(menuAlarmSevr)
	}
	field(NSTA,DBF_MENU) {
		prompt("New Alarm Status")
		special(SPC_NOMOD)
		menu(menuAlarmStat)
		interest(2)
	}
	field(NSEV,DBF_MENU) {
		prompt("New Alarm Severity")
		special(SPC_NOMOD)
		menu(menuAlarmSevr)
		interest(2)
	}
	field(ACKS,DBF_MENU) {
		prompt("Alarm Ack Severity")
		special(SPC_NOMOD)
		menu(menuAlarmSevr)
		interest(2)
	}
	field(ACKT,DBF_MENU) {
		prompt("Alarm Ack Transient")
		initial("YES")
		promptgroup(GUI_ALARMS)
		special(SPC_NOMOD)
		menu(menuYesNo)
		interest(2)
	}
	field(DISS,DBF_MENU) {
		prompt("Disable Alarm Sevrty")
		promptgroup(GUI_SCAN)
		menu(menuAlarmSevr)
		interest(1)
	}
	field(LCNT,DBF_UCHAR) {
		prompt("Lock Count")
		special(SPC_NOMOD)
		interest(2)
	}
	field(PACT,DBF_UCHAR) {
		prompt("Record active")
		special(SPC_NOMOD)
		interest(1)
	}
	field(PUTF,DBF_UCHAR) {
		prompt("dbPutField process")
		special(SPC_NOMOD)
		interest(1)
	}
	field(RPRO,DBF_UCHAR) {
		prompt("Reprocess ")
		special(SPC_NOMOD)
		interest(1)
	}
	field(ASP,DBF_NOACCESS) {
		prompt("Access Security Pvt")
		special(SPC_NOMOD)
		extra("struct asgMember *asp")
		interest(4)
	}
	field(PPN,DBF_NOACCESS) {
		prompt("addr of PUTNOTIFY")
		special(SPC_NOMOD)
		extra("struct putNotify *ppn")
		interest(4)
	}
	field(PPNR,DBF_NOACCESS) {
		prompt("pputNotifyRecord")
		special(SPC_NOMOD)
		extra("struct putNotifyRecord *ppnr")
		interest(4)
	}
	field(SPVT,DBF_NOACCESS) {
		prompt("Scan Private")
		special(SPC_NOMOD)
		extra("struct scan_element *spvt")
		interest(4)
	}
	field(RSET,DBF_NOACCESS) {
		prompt("Address of RSET")
		special(SPC_NOMOD)
		extra("struct rset	*rset")
		interest(4)
	}
	field(DSET,DBF_NOACCESS) {
		prompt("DSET address")
		special(SPC_NOMOD)
		extra("struct dset	*dset")
		interest(4)
	}
	field(DPVT,DBF_NOACCESS) {
		prompt("Device Private")
		special(SPC_NOMOD)
		extra("void		*dpvt")
		interest(4)
	}
	field(RDES,DBF_NOACCESS) {
		prompt("Address of dbRecordType")
		special(SPC_NOMOD)
		extra("struct dbRecordType *rdes")
		interest(4)
	}
	field(LSET,DBF_NOACCESS) {
		prompt("Lock Set")
		special(SPC_NOMOD)
		extra("struct lockRecord *lset")
		interest(4)
	}
	field(PRIO,DBF_MENU) {
		prompt("Scheduling Priority")
		promptgroup(GUI_SCAN)
		special(SPC_SCAN)
		menu(menuPriority)
		interest(1)
	}
	field(TPRO,DBF_UCHAR) {
		prompt("Trace Processing")
	}
	field(BKPT,DBF_NOACCESS) {
		prompt("Break Point")
		special(SPC_NOMOD)
		extra("char bkpt")
		interest(1)
	}
	field(UDF,DBF_UCHAR) {
		prompt("Undefined")
		initial("1")
		promptgroup(GUI_COMMON)
		pp(TRUE)
		interest(1)
	}
	field(TIME,DBF_NOACCESS) {
		prompt("Time")
		special(SPC_NOMOD)
		extra("epicsTimeStamp	time")
		interest(2)
	}
	field(FLNK,DBF_FWDLINK) {
		prompt("Forward Process Link")
		promptgroup(GUI_LINKS)
		interest(1)
	}
	field(VAL,DBF_ENUM) {
		prompt("Current Value")
		promptgroup(GUI_OUTPUT)
		pp(TRUE)
		asl(ASL0)
	}
	field(OMSL,DBF_MENU) {
		prompt("Output Mode Select")
		promptgroup(GUI_OUTPUT)
		menu(menuOmsl)
		interest(1)
	}
	field(DOL,DBF_INLINK) {
		prompt("Desired Output Loc")
		promptgroup(GUI_OUTPUT)
		interest(1)
	}
	field(OUT,DBF_OUTLINK) {
		prompt("Output Specification")
		promptgroup(GUI_OUTPUT)
		interest(1)
	}
	field(HIGH,DBF_DOUBLE) {
		prompt("Seconds to Hold High")
		promptgroup(GUI_OUTPUT)
		interest(1)
	}
	field(ZNAM,DBF_STRING) {
		prompt("Zero Name")
		promptgroup(GUI_DISPLAY)
		size(26)
		pp(TRUE)
		interest(1)
	}
	field(ONAM,DBF_STRING) {
		prompt("One Name")
		promptgroup(GUI_DISPLAY)
		size(26)
		pp(TRUE)
		interest(1)
	}
	field(RVAL,DBF_ULONG) {
		prompt("Raw Value")
		pp(TRUE)
	}
	field(ORAW,DBF_ULONG) {
		prompt("prev Raw Value")
		special(SPC_NOMOD)
		interest(3)
	}
	field(MASK,DBF_ULONG) {
		prompt("Hardware Mask")
		special(SPC_NOMOD)
		interest(1)
	}
	field(RPVT,DBF_NOACCESS) {
		prompt("Record Private")
		special(SPC_NOMOD)
		extra("void *  rpvt")
		interest(4)
	}
	field(WDPT,DBF_NOACCESS) {
		prompt("Watch Dog Timer ID")
		special(SPC_NOMOD)
		extra("void *	wdpt")
		interest(4)
	}
	field(ZSV,DBF_MENU) {
		prompt("Zero Error Severity")
		promptgroup(GUI_ALARMS)
		menu(menuAlarmSevr)
		pp(TRUE)
		interest(1)
	}
	field(OSV,DBF_MENU) {
		prompt("One Error Severity")
		promptgroup(GUI_ALARMS)
		menu(menuAlarmSevr)
		pp(TRUE)
		interest(1)
	}
	field(COSV,DBF_MENU) {
		prompt("Change of State Sevr")
		promptgroup(GUI_ALARMS)
		menu(menuAlarmSevr)
		pp(TRUE)
		interest(1)
	}
	field(RBV,DBF_ULONG) {
		prompt("Readback Value")
		special(SPC_NOMOD)
	}
	field(ORBV,DBF_ULONG) {
		prompt("Prev Readback Value")
		special(SPC_NOMOD)
		interest(3)
	}
	field(MLST,DBF_USHORT) {
		prompt("Last Value Monitored")
		special(SPC_NOMOD)
		interest(3)
	}
	field(LALM,DBF_USHORT) {
		prompt("Last Value Alarmed")
		special(SPC_NOMOD)
		interest(3)
	}
	field(SIOL,DBF_OUTLINK) {
		prompt("Sim Output Specifctn")
		promptgroup(GUI_INPUTS)
		interest(1)
	}
	field(SIML,DBF_INLINK) {
		prompt("Sim Mode Location")
		promptgroup(GUI_INPUTS)
		interest(1)
	}
	field(SIMM,DBF_MENU) {
		prompt("Simulation Mode")
		menu(menuYesNo)
		interest(1)
	}
	field(SIMS,DBF_MENU) {
		prompt("Sim mode Alarm Svrty")
		promptgroup(GUI_INPUTS)
		menu(menuAlarmSevr)
		interest(2)
	}
	field(IVOA,DBF_MENU) {
		prompt("INVALID outpt action")
		promptgroup(GUI_OUTPUT)
		menu(menuIvoa)
		interest(2)
	}
	field(IVOV,DBF_USHORT) {
		prompt("INVALID output value")
		promptgroup(GUI_OUTPUT)
		interest(2)
	}
}
recordtype(stringout) {
	field(NAME,DBF_STRING) {
		prompt("Record Name")
		special(SPC_NOMOD)
		size(61)
	}
	field(DESC,DBF_STRING) {
		prompt("Descriptor")
		promptgroup(GUI_COMMON)
		size(41)
	}
	field(ASG,DBF_STRING) {
		prompt("Access Security Group")
		promptgroup(GUI_COMMON)
		special(SPC_AS)
		size(29)
	}
	field(SCAN,DBF_MENU) {
		prompt("Scan Mechanism")
		promptgroup(GUI_SCAN)
		special(SPC_SCAN)
		menu(menuScan)
		interest(1)
	}
	field(PINI,DBF_MENU) {
		prompt("Process at iocInit")
		promptgroup(GUI_SCAN)
		menu(menuPini)
		interest(1)
	}
	field(PHAS,DBF_SHORT) {
		prompt("Scan Phase")
		promptgroup(GUI_SCAN)
		special(SPC_SCAN)
		interest(1)
	}
	field(EVNT,DBF_SHORT) {
		prompt("Event Number")
		promptgroup(GUI_SCAN)
		special(SPC_SCAN)
		interest(1)
	}
	field(TSE,DBF_SHORT) {
		prompt("Time Stamp Event")
		promptgroup(GUI_SCAN)
		interest(1)
	}
	field(TSEL,DBF_INLINK) {
		prompt("Time Stamp Link")
		promptgroup(GUI_SCAN)
		interest(1)
	}
	field(DTYP,DBF_DEVICE) {
		prompt("Device Type")
		promptgroup(GUI_LINKS)
		interest(1)
	}
	field(DISV,DBF_SHORT) {
		prompt("Disable Value")
		initial("1")
		promptgroup(GUI_SCAN)
	}
	field(DISA,DBF_SHORT) {
		prompt("Disable")
	}
	field(SDIS,DBF_INLINK) {
		prompt("Scanning Disable")
		promptgroup(GUI_SCAN)
		interest(1)
	}
	field(MLOK,DBF_NOACCESS) {
		prompt("Monitor lock")
		special(SPC_NOMOD)
		extra("epicsMutexId	mlok")
		interest(4)
	}
	field(MLIS,DBF_NOACCESS) {
		prompt("Monitor List")
		special(SPC_NOMOD)
		extra("ELLLIST		mlis")
		interest(4)
	}
	field(DISP,DBF_UCHAR) {
		prompt("Disable putField")
	}
	field(PROC,DBF_UCHAR) {
		prompt("Force Processing")
		pp(TRUE)
		interest(3)
	}
	field(STAT,DBF_MENU) {
		prompt("Alarm Status")
		initial("UDF")
		special(SPC_NOMOD)
		menu(menuAlarmStat)
	}
	field(SEVR,DBF_MENU) {
		prompt("Alarm Severity")
		initial("INVALID")
		special(SPC_NOMOD)
		menu(menuAlarmSevr)
	}
	field(NSTA,DBF_MENU) {
		prompt("New Alarm Status")
		special(SPC_NOMOD)
		menu(menuAlarmStat)
		interest(2)
	}
	field(NSEV,DBF_MENU) {
		prompt("New Alarm Severity")
		special(SPC_NOMOD)
		menu(menuAlarmSevr)
		interest(2)
	}
	field(ACKS,DBF_MENU) {
		prompt("Alarm Ack Severity")
		special(SPC_NOMOD)
		menu(menuAlarmSevr)
		interest(2)
	}
	field(ACKT,DBF_MENU) {
		prompt("Alarm Ack Transient")
		initial("YES")
		promptgroup(GUI_ALARMS)
		special(SPC_NOMOD)
		menu(menuYesNo)
		interest(2)
	}
	field(DISS,DBF_MENU) {
		prompt("Disable Alarm Sevrty")
		promptgroup(GUI_SCAN)
		menu(menuAlarmSevr)
		interest(1)
	}
	field(LCNT,DBF_UCHAR) {
		prompt("Lock Count")
		special(SPC_NOMOD)
		interest(2)
	}
	field(PACT,DBF_UCHAR) {
		prompt("Record active")
		special(SPC_NOMOD)
		interest(1)
	}
	field(PUTF,DBF_UCHAR) {
		prompt("dbPutField process")
		special(SPC_NOMOD)
		interest(1)
	}
	field(RPRO,DBF_UCHAR) {
		prompt("Reprocess ")
		special(SPC_NOMOD)
		interest(1)
	}
	field(ASP,DBF_NOACCESS) {
		prompt("Access Security Pvt")
		special(SPC_NOMOD)
		extra("struct asgMember *asp")
		interest(4)
	}
	field(PPN,DBF_NOACCESS) {
		prompt("addr of PUTNOTIFY")
		special(SPC_NOMOD)
		extra("struct putNotify *ppn")
		interest(4)
	}
	field(PPNR,DBF_NOACCESS) {
		prompt("pputNotifyRecord")
		special(SPC_NOMOD)
		extra("struct putNotifyRecord *ppnr")
		interest(4)
	}
	field(SPVT,DBF_NOACCESS) {
		prompt("Scan Private")
		special(SPC_NOMOD)
		extra("struct scan_element *spvt")
		interest(4)
	}
	field(RSET,DBF_NOACCESS) {
		prompt("Address of RSET")
		special(SPC_NOMOD)
		extra("struct rset	*rset")
		interest(4)
	}
	field(DSET,DBF_NOACCESS) {
		prompt("DSET address")
		special(SPC_NOMOD)
		extra("struct dset	*dset")
		interest(4)
	}
	field(DPVT,DBF_NOACCESS) {
		prompt("Device Private")
		special(SPC_NOMOD)
		extra("void		*dpvt")
		interest(4)
	}
	field(RDES,DBF_NOACCESS) {
		prompt("Address of dbRecordType")
		special(SPC_NOMOD)
		extra("struct dbRecordType *rdes")
		interest(4)
	}
	field(LSET,DBF_NOACCESS) {
		prompt("Lock Set")
		special(SPC_NOMOD)
		extra("struct lockRecord *lset")
		interest(4)
	}
	field(PRIO,DBF_MENU) {
		prompt("Scheduling Priority")
		promptgroup(GUI_SCAN)
		special(SPC_SCAN)
		menu(menuPriority)
		interest(1)
	}
	field(TPRO,DBF_UCHAR) {
		prompt("Trace Processing")
	}
	field(BKPT,DBF_NOACCESS) {
		prompt("Break Point")
		special(SPC_NOMOD)
		extra("char bkpt")
		interest(1)
	}
	field(UDF,DBF_UCHAR) {
		prompt("Undefined")
		initial("1")
		promptgroup(GUI_COMMON)
		pp(TRUE)
		interest(1)
	}
	field(TIME,DBF_NOACCESS) {
		prompt("Time")
		special(SPC_NOMOD)
		extra("epicsTimeStamp	time")
		interest(2)
	}
	field(FLNK,DBF_FWDLINK) {
		prompt("Forward Process Link")
		promptgroup(GUI_LINKS)
		interest(1)
	}
	field(VAL,DBF_STRING) {
		prompt("Current Value")
		promptgroup(GUI_OUTPUT)
		size(40)
		pp(TRUE)
		asl(ASL0)
	}
	field(OVAL,DBF_STRING) {
		prompt("Previous Value")
		special(SPC_NOMOD)
		size(40)
		interest(3)
	}
	field(DOL,DBF_INLINK) {
		prompt("Desired Output Loc")
		promptgroup(GUI_OUTPUT)
		interest(1)
	}
	field(OMSL,DBF_MENU) {
		prompt("Output Mode Select")
		promptgroup(GUI_OUTPUT)
		menu(menuOmsl)
		interest(1)
	}
	field(OUT,DBF_OUTLINK) {
		prompt("Output Specification")
		promptgroup(GUI_OUTPUT)
		interest(1)
	}
	field(MPST,DBF_MENU) {
		prompt("Post Value Monitors")
		promptgroup(GUI_DISPLAY)
		menu(stringoutPOST)
		interest(1)
	}
	field(APST,DBF_MENU) {
		prompt("Post Archive Monitors")
		promptgroup(GUI_DISPLAY)
		menu(stringoutPOST)
		interest(1)
	}
	field(SIOL,DBF_OUTLINK) {
		prompt("Sim Output Specifctn")
		promptgroup(GUI_INPUTS)
		interest(1)
	}
	field(SIML,DBF_INLINK) {
		prompt("Sim Mode Location")
		promptgroup(GUI_INPUTS)
		interest(1)
	}
	field(SIMM,DBF_MENU) {
		prompt("Simulation Mode")
		menu(menuYesNo)
		interest(1)
	}
	field(SIMS,DBF_MENU) {
		prompt("Sim mode Alarm Svrty")
		promptgroup(GUI_INPUTS)
		menu(menuAlarmSevr)
		interest(2)
	}
	field(IVOA,DBF_MENU) {
		prompt("INVALID output action")
		promptgroup(GUI_OUTPUT)
		menu(menuIvoa)
		interest(2)
	}
	field(IVOV,DBF_STRING) {
		prompt("INVALID output value")
		promptgroup(GUI_OUTPUT)
		size(40)
		interest(2)
	}
}
device(bo,CONSTANT,devBoSoft,"Soft Channel")
device(stringout,CONSTANT,devSoSoft,"Soft Channel")
registrar(seqCmdBtnsRegistrar)
